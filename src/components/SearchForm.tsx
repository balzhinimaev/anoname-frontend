import React, { useState, useEffect, ChangeEvent, FormEvent, useRef } from 'react';
import { hapticFeedback, requestLocationWithFallback, checkLocationPermission, showTelegramAlert, getTelegram } from '../utils/telegram';
import { 
  SearchFormProps, 
  SearchFormData, 
  Gender, 
  Location, 
  SearchData 
} from '../types';

const LocationStatus = {
  IDLE: 'idle' as const,
  LOADING: 'loading' as const,
  SUCCESS: 'success' as const,
  ERROR: 'error' as const
} as const;

type LocationStatus = typeof LocationStatus[keyof typeof LocationStatus];

const STORAGE_KEY = 'searchFormParams';

const SearchForm: React.FC<SearchFormProps> = ({ onSubmit, user, disabled = false }) => {
  const [formData, setFormData] = useState<SearchFormData>({
    myGender: '' as Gender,
    myAge: '',
    targetGender: '' as Gender,
    targetAgeMin: '',
    targetAgeMax: '',
    useLocation: false
  });

  const [location, setLocation] = useState<Location | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [locationStatus, setLocationStatus] = useState<LocationStatus>(LocationStatus.IDLE);
  const [locationError, setLocationError] = useState<string | null>(null);
  const [permissionStatus, setPermissionStatus] = useState<PermissionState | null>(null);
  const isInitialLoad = useRef(true);

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  useEffect(() => {
    const loadSavedData = async () => {
      try {
        const tg = getTelegram();
        if (tg && tg.CloudStorage) {
          tg.CloudStorage.getItem(STORAGE_KEY, (error: string | null, value?: string) => {
            if (error) {
              console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ CloudStorage:', error);
              return;
            }
            if (value) {
              try {
                const savedData = JSON.parse(value);
                setFormData(savedData);
                console.log('–î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ CloudStorage');
              } catch (e) {
                console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ CloudStorage:', e);
              }
            }
          });
        }
      } catch (error) {
        console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ CloudStorage:', error);
      }
    };
    
    loadSavedData();
  }, []);

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
  useEffect(() => {
    // –ù–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏
    if (isInitialLoad.current) {
      isInitialLoad.current = false;
      return;
    }

    const saveData = () => {
      try {
        const tg = getTelegram();
        if (tg && tg.CloudStorage) {
          tg.CloudStorage.setItem(STORAGE_KEY, JSON.stringify(formData), (error: string | null, success?: boolean) => {
            if (error) {
              console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ CloudStorage:', error);
            } else if (success) {
              // console.log('–î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ CloudStorage');
            }
          });
        }
      } catch (error) {
        console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ CloudStorage:', error);
      }
    };

    saveData();
  }, [formData]);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    const checkPermissions = async () => {
      try {
        const permission = await checkLocationPermission();
        setPermissionStatus(permission);
        console.log('–°—Ç–∞—Ç—É—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏:', permission);
      } catch (error) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏:', error);
      }
    };

    checkPermissions();
  }, []);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
  const requestLocation = async (): Promise<void> => {
    setLocationStatus(LocationStatus.LOADING);
    setLocationError(null);

    try {
      const position = await requestLocationWithFallback();
      
      if (position) {
        setLocation({
          latitude: position.coords.latitude,
          longitude: position.coords.longitude
        });
        setLocationStatus(LocationStatus.SUCCESS);
        hapticFeedback('success');
        console.log('–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞:', position.coords);
      } else {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é');
      }
    } catch (error) {
      const errorMessage = error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è';
      setLocationError(errorMessage);
      setLocationStatus(LocationStatus.ERROR);
      hapticFeedback('error');
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏:', error);
    }
  };

  const handleInputChange = (e: ChangeEvent<HTMLInputElement>): void => {
    const { name, value, type, checked } = e.target;
    
    // –¢–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∑–Ω–∞—á–µ–Ω–∏–π
    if (type === 'radio' || type === 'checkbox') {
      hapticFeedback('light');
    }
    
    setFormData(prev => ({
      ...prev,
      [name]: type === 'checkbox' ? checked : value
    }));

    // –ï—Å–ª–∏ –≤–∫–ª—é—á–∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –∏ –µ—ë –µ—â—ë –Ω–µ—Ç - –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º
    if (name === 'useLocation' && checked && !location && locationStatus === LocationStatus.IDLE) {
      setTimeout(() => {
        requestLocation();
      }, 100);
    }
  };

  const handleLocationRequest = async (): Promise<void> => {
    hapticFeedback('light');
    await requestLocation();
  };

  const handleSubmit = async (e: FormEvent<HTMLFormElement>): Promise<void> => {
    e.preventDefault();
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
    if (!formData.myGender || !formData.myAge || !formData.targetGender || 
        !formData.targetAgeMin || !formData.targetAgeMax) {
      hapticFeedback('error');
      showTelegramAlert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
      return;
    }

    const myAge = parseInt(formData.myAge);
    const targetAgeMin = parseInt(formData.targetAgeMin);
    const targetAgeMax = parseInt(formData.targetAgeMax);

    if (targetAgeMin > targetAgeMax) {
      hapticFeedback('error');
      showTelegramAlert('–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ');
      return;
    }

    if (myAge < 18) {
      hapticFeedback('error');
      showTelegramAlert('–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: 18 –ª–µ—Ç');
      return;
    }

    if (targetAgeMin < 18 || targetAgeMax < 18) {
      hapticFeedback('error');
      showTelegramAlert('–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞: 18 –ª–µ—Ç');
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –µ—Å–ª–∏ –æ–Ω–∞ –≤–∫–ª—é—á–µ–Ω–∞
    if (formData.useLocation && !location) {
      hapticFeedback('warning');
      showTelegramAlert('–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞, –Ω–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ –æ—Ç–∫–ª—é—á–∏—Ç–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é.');
      return;
    }

    setIsLoading(true);

    const searchData: SearchData = {
      myGender: formData.myGender,
      myAge,
      targetGender: formData.targetGender,
      targetAgeMin,
      targetAgeMax,
      useLocation: formData.useLocation,
      location: formData.useLocation ? location : null,
      userId: user?.id
    };

    try {
      await onSubmit(searchData);
    } finally {
      setIsLoading(false);
    }
  };

  const isFormValid = Boolean(
    formData.myGender && 
    formData.myAge && 
    formData.targetGender && 
    formData.targetAgeMin && 
    formData.targetAgeMax
  );

  const getLocationStatusText = () => {
    switch (locationStatus) {
      case LocationStatus.LOADING:
        return 'üîÑ –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ...';
      case LocationStatus.SUCCESS:
        return '‚úÖ –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ';
      case LocationStatus.ERROR:
        return '‚ùå –û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è';
      default:
        return 'üìç –ò—Å–∫–∞—Ç—å –±–ª–∏–∂–∞–π—à–∏—Ö —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤';
    }
  };

  const getLocationStatusColor = () => {
    switch (locationStatus) {
      case LocationStatus.LOADING:
        return 'var(--tg-theme-hint-color, #999)';
      case LocationStatus.SUCCESS:
        return 'var(--tg-theme-button-color, #0088cc)';
      case LocationStatus.ERROR:
        return 'var(--tg-theme-destructive-text-color, #ff3b30)';
      default:
        return 'var(--tg-theme-text-color, #000)';
    }
  };

  return (
    <form 
      onSubmit={handleSubmit} 
      className="form-container"
      style={{ 
        opacity: disabled ? 0.6 : 1,
        pointerEvents: disabled ? 'none' : 'auto'
      }}
    >
      {/* –í—ã–±–æ—Ä —Å–≤–æ–µ–≥–æ –ø–æ–ª–∞ */}
      <div className="form-group">
        <label className="form-label">–í–∞—à –ø–æ–ª</label>
        <div className="radio-group">
          <label className={`radio-item ${formData.myGender === 'male' ? 'selected' : ''}`}>
            <input
              type="radio"
              name="myGender"
              value="male"
              checked={formData.myGender === 'male'}
              onChange={handleInputChange}
              disabled={disabled}
            />
            üë® –ú—É–∂—á–∏–Ω–∞
          </label>
          <label className={`radio-item ${formData.myGender === 'female' ? 'selected' : ''}`}>
            <input
              type="radio"
              name="myGender"
              value="female"
              checked={formData.myGender === 'female'}
              onChange={handleInputChange}
              disabled={disabled}
            />
            üë© –ñ–µ–Ω—â–∏–Ω–∞
          </label>
        </div>
      </div>

      {/* –°–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç */}
      <div className="form-group">
        <label htmlFor="myAge" className="form-label">–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç</label>
        <input
          type="number"
          id="myAge"
          name="myAge"
          value={formData.myAge}
          onChange={handleInputChange}
          className="form-input"
          placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç"
          min="18"
          max="100"
          disabled={disabled}
        />
      </div>

      {/* –í—ã–±–æ—Ä –ø–æ–ª–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ */}
      <div className="form-group">
        <label className="form-label">–ü–æ–ª —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞</label>
        <div className="radio-group">
          <label className={`radio-item ${formData.targetGender === 'male' ? 'selected' : ''}`}>
            <input
              type="radio"
              name="targetGender"
              value="male"
              checked={formData.targetGender === 'male'}
              onChange={handleInputChange}
              disabled={disabled}
            />
            üë® –ú—É–∂—á–∏–Ω–∞
          </label>
          <label className={`radio-item ${formData.targetGender === 'female' ? 'selected' : ''}`}>
            <input
              type="radio"
              name="targetGender"
              value="female"
              checked={formData.targetGender === 'female'}
              onChange={handleInputChange}
              disabled={disabled}
            />
            üë© –ñ–µ–Ω—â–∏–Ω–∞
          </label>
          <label className={`radio-item ${formData.targetGender === 'any' ? 'selected' : ''}`}>
            <input
              type="radio"
              name="targetGender"
              value="any"
              checked={formData.targetGender === 'any'}
              onChange={handleInputChange}
              disabled={disabled}
            />
            ü§ù –õ—é–±–æ–π
          </label>
        </div>
      </div>

      {/* –í–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ */}
      <div className="form-group">
        <label className="form-label">–í–æ–∑—Ä–∞—Å—Ç —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞</label>
        <div className="age-range">
          <div>
            <input
              type="number"
              name="targetAgeMin"
              value={formData.targetAgeMin}
              onChange={handleInputChange}
              className="form-input"
              placeholder="–û—Ç"
              min="18"
              max="100"
              disabled={disabled}
            />
          </div>
          <div>
            <input
              type="number"
              name="targetAgeMax"
              value={formData.targetAgeMax}
              onChange={handleInputChange}
              className="form-input"
              placeholder="–î–æ"
              min="18"
              max="100"
              disabled={disabled}
            />
          </div>
        </div>
      </div>

      {/* –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º */}
      <div className="form-group">
        <label className={`checkbox-item ${formData.useLocation ? 'checked' : ''}`}>
          <input
            type="checkbox"
            name="useLocation"
            checked={formData.useLocation}
            onChange={handleInputChange}
            disabled={disabled}
          />
          <span style={{ color: getLocationStatusColor() }}>
            {getLocationStatusText()}
          </span>
        </label>
        
        {formData.useLocation && (
          <div style={{ marginTop: '8px', fontSize: '14px' }}>
            {locationStatus === LocationStatus.ERROR && locationError && (
              <div style={{ 
                color: 'var(--tg-theme-destructive-text-color, #ff3b30)',
                marginBottom: '8px'
              }}>
                {locationError}
              </div>
            )}
            
            {permissionStatus === 'denied' && (
              <div style={{ 
                color: 'var(--tg-theme-hint-color, #999)',
                marginBottom: '8px'
              }}>
                üí° –†–∞–∑—Ä–µ—à–∏—Ç–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±—Ä–∞—É–∑–µ—Ä–∞
              </div>
            )}
            
            {(locationStatus === LocationStatus.ERROR || (!location && locationStatus !== LocationStatus.LOADING)) && (
              <button
                type="button"
                onClick={handleLocationRequest}
                disabled={disabled}
                style={{
                  background: 'var(--tg-theme-button-color, #0088cc)',
                  color: 'var(--tg-theme-button-text-color, white)',
                  border: 'none',
                  padding: '6px 12px',
                  borderRadius: '6px',
                  fontSize: '14px',
                  cursor: 'pointer',
                  opacity: 1
                }}
              >
                üîÑ –û–±–Ω–æ–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
              </button>
            )}
            
            {location && locationStatus === LocationStatus.SUCCESS && (
              <div style={{ 
                color: 'var(--tg-theme-hint-color, #999)',
                fontSize: '12px'
              }}>
                –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {location.latitude.toFixed(4)}, {location.longitude.toFixed(4)}
              </div>
            )}
          </div>
        )}
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
      <button
        type="submit"
        className="submit-button"
        disabled={!isFormValid || isLoading || disabled}
      >
        {disabled 
          ? '‚è∏Ô∏è –ü–æ–∏—Å–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω' 
          : isLoading 
            ? 'üîç –ò—â–µ–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞...' 
            : 'üí¨ –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫'
        }
      </button>

      {user && (
        <div style={{ 
          marginTop: '16px', 
          fontSize: '14px', 
          color: 'var(--tg-theme-hint-color, #999)', 
          textAlign: 'center' 
        }}>
          –ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã
        </div>
      )}
      
      {!user && (
        <div style={{ 
          marginTop: '16px', 
          fontSize: '14px', 
          color: 'var(--tg-theme-hint-color, #999)', 
          textAlign: 'center' 
        }}>
          –ó–∞–ø—É—Å—Ç–∏—Ç–µ —á–µ—Ä–µ–∑ Telegram –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞
        </div>
      )}
    </form>
  );
};

export default SearchForm; 